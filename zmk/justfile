#!/usr/bin/env just --justfile

set shell := ["bash", "-c"]

# --- Environment Setup ---

proj_root := justfile_directory()
app_dir := proj_root + "/app"
workspace_dir := parent_directory(proj_root)
zmk_config_dir := join(workspace_dir, 'zmk-config')
zmk_config := join(zmk_config_dir, 'config')
zmk_module_dir := join(workspace_dir, 'zmk_playground_module')
zmk_bindings_dir := join(app_dir, 'dts', 'bindings')
export ZEPHYR_EXTRA_BINDINGS_DIR := zmk_bindings_dir
zephyr_bindings_dir := join(zephyr_base, 'dts', 'bindings')
zephyr_base := env('ZEPHYR_BASE')
artifacts_dir := app_dir / "artifacts"

mod zephyr '~/.config/just/zephyr'
mod JLink '~/.config/just/JLink'
mod zmk-config '../zmk-config'

full_board_name_cmd := 'west boards -f "{name}/{qualifiers}" --name "$1" --board-root {{zmk_module_dir}}'

# --- Recipes ---
default: list
    just --list
    @echo "Zephyr base is {{ zephyr_base }}"

print-paths:
    @echo "app_dir={{ app_dir }}"
    @echo "workspace_dir={{ workspace_dir }}"
    @echo "zmk_config_dir={{ zmk_config_dir }}"
    @echo "zmk_module_dir={{ zmk_module_dir }}"

import '../zmk-config/justfile'

# artifacts: list
build board shield snippet artifact *extra_args:
    just zephyr build-full {{ board }} {{ artifact }} {{ shield }} {{ snippet }} {{ app_dir }} '-- -DZMK_CONFIG={{ zmk_config }} -DZMK_EXTRA_MODULES={{ zmk_module_dir }} {{ extra_args }}'

# build-zmk board shield snippet artifact_name *west_args:
#     @echo "Building zmk for {{board}}"
#     # --- Execute the command ---
#     west build -s {{app_dir}} -d "{{app_dir}}/build_{{artifact_name}}" -b "{{ shell(full_board_name_cmd, board) }}" -S {{snippet}} {{west_args}} -p -- -DSHIELD={{shield}} -DZMK_CONFIG={{zmk_config}} -DZMK_EXTRA_MODULES={{zmk_module_dir}}
#     @echo "Creating artifacts directory"
#     @mkdir -p "{{artifacts_dir}}/{{artifact_name}}_{{datetime('%H:%M:%S')}}"
#
#     @echo "Copying hex and uf2 files to artifacts directory"
#     cp {{app_dir}}/build_{{artifact_name}}/zephyr/{zmk.hex,zmk.uf2} {{artifacts_dir}}/{{artifact_name}}_{{datetime('%H:%M:%S')}}

build-zmk expr *west_args: (parse_targets expr)
    cat {{ targets_csv }} | while IFS=, read -r board shield snippet artifact; do \
        echo "board: $board"; \
        echo "shield: $shield"; \
        echo "snippet: $snippet"; \
        echo "artifact: $artifact"; \
        just build "$board" "$shield" "$snippet" "$artifact" {{ west_args }}; \
    done

build-nice-nano: (build-zmk "nice_nano")

build-pro-micro-rpico2: (build-zmk "sparkfun_pro_micro_rp2350")

build-all: (build-zmk "all")

clean-all:
    rm -r {{ app_dir }}/build*
